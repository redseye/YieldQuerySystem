@using YieldQuerySystem.Models.ViewModel
@model DailyYieldSearchViewModel
@{
    ViewData["Title"] = "Yield Query System";
    @*if (ViewData["Title"] != null)
        {
            <script>alert(ViewData["Massage"])</script>

        }*@
}

<div class="interface">
    <div class="intro">
        <partial name="_DailyYieldSearchBar" model="Model" />
        <canvas id="ChartJS"></canvas>
        <table id=queryTable class="table table-bordered">
        </table>
    </div>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {

            $("#CloseYield").addClass("active");

            $(".TDCust3Code").hide();

            var $table = $("#queryTable");

            var sumOverAllYield;
            var myLineChart;

            function checkTime() {
                var datedif = (new Date($("txtDateEnd").val()) - new Date($("txtDateStart").val())) / 1000 / 60 / 60 / 24;
                if ($("#txtDateStart").val() == '' || $("txtDateEnd").val() == '') {
                    alert("請輸入時間區間");
                    return;
                }
                else if (datedif > 90) {
                    alert("請輸入時間區間在三個月(90天)內");
                    return false;
                }

                return true;
            }

            function mmddformat(StartTime) {
                StartTime = new Date(StartTime);
                showmonth = StartTime.getMonth() + 1;
                showday = StartTime.getDate();
                if (showmonth.toString().length == 1) {
                    showmonth = "0" + showmonth;
                }
                if (showday.toString().length == 1) {
                    showday = "0" + showday;
                }
                arydate = showmonth + "/" + showday;
                return arydate;
            }

            function gettablestring(data) {

                appendstring = '<tr>';
                appendstring += '<td></td>' + '<td></td>' + '<td>Schedule</td>';

                data.forEach(function (item) {
                    appendstring += '<td>' + item.LotNo + '</td>'
                });

                appendstring += '</tr>'
                appendstring += "<tr>";
                appendstring += '<td></td>' + '<td></td>' + "<td>Assy Input qty</td>"

                data.forEach(function (item) {
                    appendstring += '<td>' + item.QtyIssue + '</td>'
                });
                appendstring += "</tr>";
                appendstring += "<tr>";
                appendstring += '<td></td>' + '<td></td>' + "<td>Assy Output qty</td>"

                data.forEach(function (item) {
                    appendstring += '<td>' + item.QtyOut + '</td>'
                });
                appendstring += "</tr>";
                appendstring += "<tr>";
                appendstring += '<td></td>' + '<td></td>' + "<td>Assy Yield</td>"

                data.forEach(function (item) {
                    appendstring += '<td>' + item.OverAllYield + "%" + '</td>'
                });
                appendstring += "</tr>";
                appendstring += "<tr>";
                appendstring += '<td></td>' + '<td></td>' + "<td>Loss Qty</td>"

                data.forEach(function (item) {
                    appendstring += '<td>' + item.LossQty + '</td>'
                });
                appendstring += "</tr>";

                return appendstring;
            }

            function ErrorCodeTableString(data) {
                appendstring = '';
                data.LossDataView.forEach(function (item) {
                    appendstring += '<tr>'
                    appendstring += '<td>' + item.StageCode + '</td>' + '<td>' + item.LossCode + '</td>' + '<td>' + item.LossDesc + '</td>';

                    data.LotView.forEach(function (ViewLotNo) {
                        var flag=false;
                        item.LD.forEach(function (LDItem) {
                            if (LDItem.LotNo == ViewLotNo.LotNo) {
                                appendstring += '<td>' + LDItem.UniLossQty + '</td>';
                                flag=true;
                            }
                        });
                        if(!flag)
                        {
                           appendstring += '<td>' + '0' + '</td>';   
                        }
                    });

                    appendstring += '</tr>'
                });
                return appendstring;
            }

            function DrawLineChart(data) {
                const ctx = $("#ChartJS");

                if (myLineChart) {
                    myLineChart.destroy();
                }
                var chartLabels = ['Cum'];
                var chartOverAllYield = [sumOverAllYield];
                data.forEach(function (item) {
                    chartLabels.push(item.LotNo);
                    chartOverAllYield.push(item.OverAllYield)
                });
                myLineChart = new Chart(ctx, {
                    data: {
                        labels: chartLabels,
                        datasets: [{
                            type: 'line',
                            data: chartOverAllYield,
                        }]
                    },
                    options: {
                        scales:
                        {
                            y:
                            {
                                beginAtZero: true,
                                ticks: {
                                    min: 0,
                                    max: 100,
                                    callback: function (value) {
                                        return value + "%"
                                    }
                                },
                                scaleLabel: {
                                    display: true,
                                    labelString: "Percentage"
                                }
                            },
                        },
                        plugins: {
                            legend:
                            {
                                display: false
                            }
                        }

                    }
                }
                )
            }

            $("#YieldTable").hide();

            $("#buttonQuery").click(function () {

                if (!checkTime()) {
                    return;
                }

                var QueryCondition =
                {
                    Plant: $("#Plant").val(),
                    Cust2Code: $("#Cust2Code").val(),
                    PKGCode: $("#txtPKGCode").val(),
                    StageCode: $("#StageCode").val(),
                    DeviceName: $("#txtDeviceName").val(),
                    StartTime: $("#txtDateStart").val(),
                    EndTime: $("#txtDateEnd").val(),
                }

                $.ajax({
                    url: '../CloseYieldQuery/QueryCloseYieldByLot',
                    type: 'post',
                    dataType: 'json',
                    data: QueryCondition,
                    contentsType: 'acclication/json',
                    success: function (data) {
                        //ajax 打出成功要做的事
                        $("#queryTable > thead").remove();
                        $("#queryTable > tbody").remove();

                        var appendstring = '<th scope="col">StageCode</th>' + '<th scope="col">LossCode</th>' + '<th scope="col">Date</th>';

                        data.LotView.sort(function (a, b){

                            if (mmddformat(a.CloseDT)==  mmddformat(b.CloseDT))
                            {
                                return 1;
                            }

                            return a.CloseDT - b.CloseDT
                        });

                        data.LotView.forEach(function (item) {
                            appendstring += '<th scope="col">' + mmddformat(item.CloseDT) + '</th>'
                        });

                        $table.append('<thead>').children("thead")
                            .append('<tr>').children('tr')
                            .append(appendstring);

                        //add tbody
                        var $tbody = $table.append('<tbody />').children('tbody');
                        //add row
                        appendstring = gettablestring(data.LotView);

                        $tbody.append(appendstring);

                        appendstring = ErrorCodeTableString(data);

                        $tbody.append(appendstring);

                        DrawLineChart(data.LotView);

                    },
                    error: function (data) {
                        //ajax 打出失敗要做的事
                        alert("查詢失敗，請稍後查詢。")
                    }
                });
            });
        });
    </script>
}

<script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
<script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

